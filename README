README for the gnupg-doc repository                         -*- org -*-

This is a separated branch for the gnupg.org website.

The old website was tracked in a CVS repository but we want to start
the new website form scratch using only the texts from the generated
HTML files.

** Directory structure

   - web/      :: Source files for the web.  This also include images
                  etc.
   - web/share :: Logos, CSS, macros and elisp for building.
   - misc      :: Other websites etc.
                  - blog.gnupg.org
                  - git.gnupg.org
                  - howtos.gnupg.org :: Manuals etc.
   - build-aux :: Build helper rscripts
   - tools/    :: Tools used to build the web site.
   - stage/    :: staging directory for the site.

** Aliases

www.gnupg.org uses Boa to serve the pages, here are the aliases we
use:

#+BEGIN_EXAMPLE
# The manuals are maintained outside of the web pages;
# thus we use an alias to copy them in.
Alias /documentation/manuals /var/www/shared/manuals
Alias /gph /var/www/shared/gph

# The FAQ is located in the manuals directory but linked to the faq directory
Alias /faq/GnuPG-FAQ.html  /var/www/shared/manuals/GnuPG-FAQ.html


# Redirect a couple of well-known URLs
Redirect /gpa.html      http://www.gnupg.org/related_software/gpa/
Redirect /gpgme.html    http://www.gnupg.org/related_software/gpgme/
Redirect /docs.html     http://www.gnupg.org/documentation/
Redirect /download.html http://www.gnupg.org/download/
Redirect /faq.html      http://www.gnupg.org/documentation/faqs.html

# We use redirect to make language switching work.
Redirect /why-not-idea.html  http://www.gnupg.org/faq/why-not-idea.html

Redirect /howtos/ch/  http://www.gnupg.org/howtos/zh/

Redirect /fund   http://goteo.org/project/gnupg-new-website-and-infrastructure

#+END_EXAMPLE

The howtos are symlinked into the www.gnupg.org tree.


** Symlinks

For compatibility with the old website it is best to run this script
in the htdocs directory:

for d in $(find . -type d); \\
   do (cd $d && for f in $(ls *.html | grep -v '*.??.html'); \\
       do ln -s $f ${f%.html}.en.html; ln -s $f ${f%.html}.de.html ; \\
   done ); done

** Cronjobs

  A cronjob needs to run mkkudos.sh to update the list of donors.
  This can be done every few minutes becuase mkkudos won't do anything
  if the list of donors has not been updated.

** Writing a blog entry

  The misc/blog.gnupg.org directory is used for the blogging system.
  On the web server it is symlinked to /blog/.  To build and upload all
  blogs you cd to misc/blog.gnupg.org and run the command ./upload.
  This renders the org files into html, builds an index, and uploads
  the html files to the web server.  Emacs and a decent org-mode are
  required (tested with org-mode 8.2.7).

  To add a new blog entry, decide on the publication date and create
  a file

    YYYYMMDD-short-headline.org

  for example "20141030-what-happened-this-month.org".  Unless you
  translate an existing entry do not use a file name which ends in
  ".??.org".  The file itself is a standard org file using these
  conventions:

  ===== 8< =========
  # Comment
  #+AUTHOR: Werner
  #+DATE: 30th October 2014

  ** What happened in October 2014

  Blurb
  ===== >8 =========

  AUTHOR and DATE are used to construct the "Posted at" info.  The
  headline needs to start at level 2.
